name: 'Sync Version To Terraform'
description: 'Syncs the version of a deployed image to the operations repository'
inputs:
  token-private-repos:
    description: 'Github PAT to access private repos'
    required: true
  gcloud-project-id:
    description: 'Google Cloud Project Id'
    required: true
  gcloud-artifact-region:
    description: 'Region for Google Cloud Artifact'
    required: true
  gcloud-artifact-project:
    description: 'Project for Google Cloud Artifact'
    required: true
  gcloud-artifact-repository:
    description: 'Repository for Google Cloud Artifact'
    required: true
  gcloud-artifact-image:
    description: 'Artifact Image name for Google Cloud Artifact'
    required: true
  gcloud-workload-identity-provider:
    required: true
    description: 'GCloud Identity Provider id to use for federated authentication'
  gcloud-service-account:
    required: true
    description: 'GCloud Service Account to authenticate as, e.g. github-actions@...'
  service-name:
    description: 'Service Name, must match Google Cloud Artifact Service Name'
    required: true
  environment:
    description: 'Environment to update'
    required: true
  file-path:
    description: 'Path to terraform file'
    required: true
  tag:
    description: 'Docker Image tag to sync'
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
      with:
        repository: 'go-fjords/operation'
        ref: 'main'
        token: ${{ inputs.token-private-repos }}
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ${{ inputs.gcloud-workload-identity-provider }}
        service_account: ${{ inputs.gcloud-service-account }}
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
    - name: Get Docker Image Digest
      id: get-docker-image-digest
      run: |
        export DOCKER_IMAGE_DIGEST=$(gcloud artifacts docker images list ${{ inputs.gcloud-artifact-region }}-docker.pkg.dev/${{ inputs.gcloud-artifact-project }}/${{ inputs.gcloud-artifact-repository }}/${{ inputs.gcloud-artifact-image }} --format='value(version)' --include-tags --filter tags~${{ inputs.tag }})
        echo "::set-output name=DOCKER_IMAGE_DIGEST::$DOCKER_IMAGE_DIGEST"
      shell: bash
    - run: |
        echo "Update '${{ inputs.environment }}' in '${{ inputs.file-path }}' with digest '$DOCKER_IMAGE_DIGEST'"
        sed -ie "s/${{ inputs.environment }}\(\s*\)= \"sha256:[a-z0-9]*\"/${{ inputs.environment }}\1= \"$DOCKER_IMAGE_DIGEST\"/" ${{ inputs.file-path }}
      shell: bash
      id: update-version
      env:
        DOCKER_IMAGE_DIGEST: ${{ steps.get-docker-image-digest.outputs.DOCKER_IMAGE_DIGEST}}
    - name: Create Commit
      run: |
        git config user.name 'go-fjords-tech'
        git config user.email 'go-fjords-tech@users.noreply.github.com'
        git commit ${{ inputs.file-path }} -m "Update ${{ inputs.environment }} for ${{ inputs.gcloud-artifact-image }}" -m "Updating `${{ inputs.environment }}` version in `${{ inputs.file-path }}` with `${{ steps.get-docker-image-digest.outputs.DOCKER_IMAGE_DIGEST}}`"
        git stash
      shell: bash
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ inputs.token-private-repos }}
        branch: auto-update-version/${{ inputs.gcloud-artifact-image }}-${{ inputs.environment }}
        labels: automerge
        delete-branch: true